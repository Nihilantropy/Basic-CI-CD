pipeline {

	/* use a custom Dockerfile to setup the agent */
    agent { dockerfile true }

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "nexus:8081"
        NEXUS_REPO = "my-artifacts"
        NEXUS_CREDENTIALS_ID = "bb41509b-d0cc-4f65-94a4-755c22441930" //change to a credential secret 
        GROUP_ID = "W.mc.A"
        ARTIFACT_ID = "app"
        ARTIFACT_VERSION = "1.0.0"
        ARTIFACT_TYPE = "bin"
        ARTIFACT_PATH = "dist/"
    }

    stages {
        stage('Install Dependencies') {
            steps {
                /* Create virtual environment and install Python dependencies */
                sh '''
                    python -m venv venv
                    . venv/bin/activate
                    pip install --no-cache-dir -r srcs/requirements.txt
                    pip install pytest pyinstaller
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo "Running tests..."
                sh '''
                    . venv/bin/activate
                    pytest srcs/tests --maxfail=1 --disable-warnings -q
                '''
            }
        }

        stage('Build Executable') {
            steps {
                echo "Building executable using PyInstaller..."
                sh '''
                    . venv/bin/activate
                    pyinstaller --onefile srcs/main/app.py
                '''
            }
        }

        stage('Archive Executable') {
            steps {
                echo "Archiving the built executable..."
                archiveArtifacts artifacts: 'dist/', fingerprint: true
            }
        }

        stage('Upload to Nexus') {
            steps {
                nexusArtifactUploader(
                    nexusVersion: NEXUS_VERSION,
                    protocol: NEXUS_PROTOCOL,
                    nexusUrl: NEXUS_URL,
                    groupId: GROUP_ID,
                    version: ARTIFACT_VERSION,
                    repository: NEXUS_REPO,
                    credentialsId: NEXUS_CREDENTIALS_ID,
                    artifacts: [
                        [
                            artifactId: ARTIFACT_ID,
                            type: ARTIFACT_TYPE,
                            file: ARTIFACT_PATH
                        ]
                    ]
                )
            }
        }
    }
}
